
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000084c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  4 .ARM          00000000  080009e4  080009e4  000109ec  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e4  080009ec  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e4  080009e4  000109e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009e8  080009e8  000109e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000000  080009ec  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  080009ec  00020034  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ad4  00000000  00000000  00010a1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002af  00000000  00000000  000114f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000117a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00011868  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001c5d  00000000  00000000  00011908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000eef  00000000  00000000  00013565  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000801c  00000000  00000000  00014454  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001c470  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000284  00000000  00000000  0001c4c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080009cc 	.word	0x080009cc

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080009cc 	.word	0x080009cc

080001d8 <delay>:
#include "stm32f411xx_gpio_driver.h"
#include <stdint.h>
#include <string.h>

void delay(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i <= 500000 ; i++);
 80001de:	2300      	movs	r3, #0
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	e002      	b.n	80001ea <delay+0x12>
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	3301      	adds	r3, #1
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <delay+0x28>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d9f8      	bls.n	80001e4 <delay+0xc>
}
 80001f2:	bf00      	nop
 80001f4:	bf00      	nop
 80001f6:	370c      	adds	r7, #12
 80001f8:	46bd      	mov	sp, r7
 80001fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fe:	4770      	bx	lr
 8000200:	0007a120 	.word	0x0007a120

08000204 <main>:

GPIO_Handle_t GpioLed, GpioButton;

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0

	memset(&GpioLed,0,sizeof(GpioButton));
 8000208:	220c      	movs	r2, #12
 800020a:	2100      	movs	r1, #0
 800020c:	482a      	ldr	r0, [pc, #168]	; (80002b8 <main+0xb4>)
 800020e:	f000 fbd5 	bl	80009bc <memset>
	memset(&GpioLed,0,sizeof(GpioLed));
 8000212:	220c      	movs	r2, #12
 8000214:	2100      	movs	r1, #0
 8000216:	4828      	ldr	r0, [pc, #160]	; (80002b8 <main+0xb4>)
 8000218:	f000 fbd0 	bl	80009bc <memset>

    GpioButton.pGPIOx = GPIOA;
 800021c:	4b27      	ldr	r3, [pc, #156]	; (80002bc <main+0xb8>)
 800021e:	4a28      	ldr	r2, [pc, #160]	; (80002c0 <main+0xbc>)
 8000220:	601a      	str	r2, [r3, #0]
    GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000222:	4b26      	ldr	r3, [pc, #152]	; (80002bc <main+0xb8>)
 8000224:	2200      	movs	r2, #0
 8000226:	711a      	strb	r2, [r3, #4]
    GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000228:	4b24      	ldr	r3, [pc, #144]	; (80002bc <main+0xb8>)
 800022a:	2204      	movs	r2, #4
 800022c:	715a      	strb	r2, [r3, #5]
    GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800022e:	4b23      	ldr	r3, [pc, #140]	; (80002bc <main+0xb8>)
 8000230:	2202      	movs	r2, #2
 8000232:	71da      	strb	r2, [r3, #7]
    GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000234:	4b21      	ldr	r3, [pc, #132]	; (80002bc <main+0xb8>)
 8000236:	2200      	movs	r2, #0
 8000238:	721a      	strb	r2, [r3, #8]

    GPIO_PeriClockControl(GpioButton.pGPIOx, ENABLE);
 800023a:	4b20      	ldr	r3, [pc, #128]	; (80002bc <main+0xb8>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	2101      	movs	r1, #1
 8000240:	4618      	mov	r0, r3
 8000242:	f000 f88f 	bl	8000364 <GPIO_PeriClockControl>
    GPIO_Init(&GpioButton);
 8000246:	481d      	ldr	r0, [pc, #116]	; (80002bc <main+0xb8>)
 8000248:	f000 f928 	bl	800049c <GPIO_Init>



    GpioLed.pGPIOx = GPIOD;
 800024c:	4b1a      	ldr	r3, [pc, #104]	; (80002b8 <main+0xb4>)
 800024e:	4a1d      	ldr	r2, [pc, #116]	; (80002c4 <main+0xc0>)
 8000250:	601a      	str	r2, [r3, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000252:	4b19      	ldr	r3, [pc, #100]	; (80002b8 <main+0xb4>)
 8000254:	220c      	movs	r2, #12
 8000256:	711a      	strb	r2, [r3, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000258:	4b17      	ldr	r3, [pc, #92]	; (80002b8 <main+0xb4>)
 800025a:	2201      	movs	r2, #1
 800025c:	715a      	strb	r2, [r3, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800025e:	4b16      	ldr	r3, [pc, #88]	; (80002b8 <main+0xb4>)
 8000260:	2202      	movs	r2, #2
 8000262:	71da      	strb	r2, [r3, #7]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000264:	4b14      	ldr	r3, [pc, #80]	; (80002b8 <main+0xb4>)
 8000266:	2200      	movs	r2, #0
 8000268:	719a      	strb	r2, [r3, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800026a:	4b13      	ldr	r3, [pc, #76]	; (80002b8 <main+0xb4>)
 800026c:	2200      	movs	r2, #0
 800026e:	721a      	strb	r2, [r3, #8]

	GPIO_PeriClockControl(GpioLed.pGPIOx, ENABLE);
 8000270:	4b11      	ldr	r3, [pc, #68]	; (80002b8 <main+0xb4>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	2101      	movs	r1, #1
 8000276:	4618      	mov	r0, r3
 8000278:	f000 f874 	bl	8000364 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800027c:	480e      	ldr	r0, [pc, #56]	; (80002b8 <main+0xb4>)
 800027e:	f000 f90d 	bl	800049c <GPIO_Init>

	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000282:	4b0d      	ldr	r3, [pc, #52]	; (80002b8 <main+0xb4>)
 8000284:	220d      	movs	r2, #13
 8000286:	711a      	strb	r2, [r3, #4]
	GPIO_Init(&GpioLed);
 8000288:	480b      	ldr	r0, [pc, #44]	; (80002b8 <main+0xb4>)
 800028a:	f000 f907 	bl	800049c <GPIO_Init>
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800028e:	4b0a      	ldr	r3, [pc, #40]	; (80002b8 <main+0xb4>)
 8000290:	220e      	movs	r2, #14
 8000292:	711a      	strb	r2, [r3, #4]
	GPIO_Init(&GpioLed);
 8000294:	4808      	ldr	r0, [pc, #32]	; (80002b8 <main+0xb4>)
 8000296:	f000 f901 	bl	800049c <GPIO_Init>
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 800029a:	4b07      	ldr	r3, [pc, #28]	; (80002b8 <main+0xb4>)
 800029c:	220f      	movs	r2, #15
 800029e:	711a      	strb	r2, [r3, #4]
	GPIO_Init(&GpioLed);
 80002a0:	4805      	ldr	r0, [pc, #20]	; (80002b8 <main+0xb4>)
 80002a2:	f000 f8fb 	bl	800049c <GPIO_Init>

	GPIO_IRQ_PriortyConfig(IRQ_NO_EXTI0, 15);
 80002a6:	210f      	movs	r1, #15
 80002a8:	2006      	movs	r0, #6
 80002aa:	f000 fb19 	bl	80008e0 <GPIO_IRQ_PriortyConfig>
	GPIO_IRQ_InterruptConfig(IRQ_NO_EXTI0, ENABLE);
 80002ae:	2101      	movs	r1, #1
 80002b0:	2006      	movs	r0, #6
 80002b2:	f000 fa8f 	bl	80007d4 <GPIO_IRQ_InterruptConfig>

	while(1)
 80002b6:	e7fe      	b.n	80002b6 <main+0xb2>
 80002b8:	2000001c 	.word	0x2000001c
 80002bc:	20000028 	.word	0x20000028
 80002c0:	40020000 	.word	0x40020000
 80002c4:	40020c00 	.word	0x40020c00

080002c8 <EXTI0_IRQHandler>:
		}*/
	}
}

void EXTI0_IRQHandler(void)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0

	delay();
 80002cc:	f7ff ff84 	bl	80001d8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 80002d0:	2000      	movs	r0, #0
 80002d2:	f000 fb2f 	bl	8000934 <GPIO_IRQHandling>

	GPIO_ToggleOutputPin(GpioLed.pGPIOx, GPIO_PIN_NO_12);
 80002d6:	4b0d      	ldr	r3, [pc, #52]	; (800030c <EXTI0_IRQHandler+0x44>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	210c      	movs	r1, #12
 80002dc:	4618      	mov	r0, r3
 80002de:	f000 fa63 	bl	80007a8 <GPIO_ToggleOutputPin>
	GPIO_ToggleOutputPin(GpioLed.pGPIOx, GPIO_PIN_NO_13);
 80002e2:	4b0a      	ldr	r3, [pc, #40]	; (800030c <EXTI0_IRQHandler+0x44>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	210d      	movs	r1, #13
 80002e8:	4618      	mov	r0, r3
 80002ea:	f000 fa5d 	bl	80007a8 <GPIO_ToggleOutputPin>
	GPIO_ToggleOutputPin(GpioLed.pGPIOx, GPIO_PIN_NO_14);
 80002ee:	4b07      	ldr	r3, [pc, #28]	; (800030c <EXTI0_IRQHandler+0x44>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	210e      	movs	r1, #14
 80002f4:	4618      	mov	r0, r3
 80002f6:	f000 fa57 	bl	80007a8 <GPIO_ToggleOutputPin>
	GPIO_ToggleOutputPin(GpioLed.pGPIOx, GPIO_PIN_NO_15);
 80002fa:	4b04      	ldr	r3, [pc, #16]	; (800030c <EXTI0_IRQHandler+0x44>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	210f      	movs	r1, #15
 8000300:	4618      	mov	r0, r3
 8000302:	f000 fa51 	bl	80007a8 <GPIO_ToggleOutputPin>

}
 8000306:	bf00      	nop
 8000308:	bd80      	pop	{r7, pc}
 800030a:	bf00      	nop
 800030c:	2000001c 	.word	0x2000001c

08000310 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000310:	480d      	ldr	r0, [pc, #52]	; (8000348 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000312:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000314:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000318:	480c      	ldr	r0, [pc, #48]	; (800034c <LoopForever+0x6>)
  ldr r1, =_edata
 800031a:	490d      	ldr	r1, [pc, #52]	; (8000350 <LoopForever+0xa>)
  ldr r2, =_sidata
 800031c:	4a0d      	ldr	r2, [pc, #52]	; (8000354 <LoopForever+0xe>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000320:	e002      	b.n	8000328 <LoopCopyDataInit>

08000322 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000322:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000324:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000326:	3304      	adds	r3, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000328:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800032c:	d3f9      	bcc.n	8000322 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032e:	4a0a      	ldr	r2, [pc, #40]	; (8000358 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000330:	4c0a      	ldr	r4, [pc, #40]	; (800035c <LoopForever+0x16>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000334:	e001      	b.n	800033a <LoopFillZerobss>

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000336:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000338:	3204      	adds	r2, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033e:	f000 fb19 	bl	8000974 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000342:	f7ff ff5f 	bl	8000204 <main>

08000346 <LoopForever>:

LoopForever:
  b LoopForever
 8000346:	e7fe      	b.n	8000346 <LoopForever>
  ldr   r0, =_estack
 8000348:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800034c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000350:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000354:	080009ec 	.word	0x080009ec
  ldr r2, =_sbss
 8000358:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800035c:	20000034 	.word	0x20000034

08000360 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000360:	e7fe      	b.n	8000360 <ADC_IRQHandler>
	...

08000364 <GPIO_PeriClockControl>:


/*Peripheral clock setup */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 8000364:	b480      	push	{r7}
 8000366:	b083      	sub	sp, #12
 8000368:	af00      	add	r7, sp, #0
 800036a:	6078      	str	r0, [r7, #4]
 800036c:	460b      	mov	r3, r1
 800036e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000370:	78fb      	ldrb	r3, [r7, #3]
 8000372:	2b01      	cmp	r3, #1
 8000374:	d13f      	bne.n	80003f6 <GPIO_PeriClockControl+0x92>
	{
		if(pGPIOx == GPIOA)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a41      	ldr	r2, [pc, #260]	; (8000480 <GPIO_PeriClockControl+0x11c>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800037e:	4b41      	ldr	r3, [pc, #260]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a40      	ldr	r2, [pc, #256]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000384:	f043 0301 	orr.w	r3, r3, #1
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
 800038a:	e009      	b.n	80003a0 <GPIO_PeriClockControl+0x3c>
		}

		else if(pGPIOx == GPIOB)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a3e      	ldr	r2, [pc, #248]	; (8000488 <GPIO_PeriClockControl+0x124>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d105      	bne.n	80003a0 <GPIO_PeriClockControl+0x3c>
		{
			GPIOB_PCLK_EN();
 8000394:	4b3b      	ldr	r3, [pc, #236]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000398:	4a3a      	ldr	r2, [pc, #232]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800039a:	f043 0302 	orr.w	r3, r3, #2
 800039e:	6313      	str	r3, [r2, #48]	; 0x30
		}

		if(pGPIOx == GPIOC)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a3a      	ldr	r2, [pc, #232]	; (800048c <GPIO_PeriClockControl+0x128>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClockControl+0x52>
		{
			GPIOC_PCLK_EN();
 80003a8:	4b36      	ldr	r3, [pc, #216]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a35      	ldr	r2, [pc, #212]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003ae:	f043 0304 	orr.w	r3, r3, #4
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
 80003b4:	e009      	b.n	80003ca <GPIO_PeriClockControl+0x66>
		}

		else if(pGPIOx == GPIOD)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a35      	ldr	r2, [pc, #212]	; (8000490 <GPIO_PeriClockControl+0x12c>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d105      	bne.n	80003ca <GPIO_PeriClockControl+0x66>
		{
			GPIOD_PCLK_EN();
 80003be:	4b31      	ldr	r3, [pc, #196]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a30      	ldr	r2, [pc, #192]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003c4:	f043 0308 	orr.w	r3, r3, #8
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
		}

		if(pGPIOx == GPIOE)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a31      	ldr	r2, [pc, #196]	; (8000494 <GPIO_PeriClockControl+0x130>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0x7c>
		{
			GPIOE_PCLK_EN();
 80003d2:	4b2c      	ldr	r3, [pc, #176]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d6:	4a2b      	ldr	r2, [pc, #172]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003d8:	f043 0310 	orr.w	r3, r3, #16
 80003dc:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 80003de:	e049      	b.n	8000474 <GPIO_PeriClockControl+0x110>
		else if(pGPIOx == GPIOH)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a2d      	ldr	r2, [pc, #180]	; (8000498 <GPIO_PeriClockControl+0x134>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d145      	bne.n	8000474 <GPIO_PeriClockControl+0x110>
			GPIOH_PCLK_EN();
 80003e8:	4b26      	ldr	r3, [pc, #152]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ec:	4a25      	ldr	r2, [pc, #148]	; (8000484 <GPIO_PeriClockControl+0x120>)
 80003ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f4:	e03e      	b.n	8000474 <GPIO_PeriClockControl+0x110>
		if(pGPIOx == GPIOA)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4a21      	ldr	r2, [pc, #132]	; (8000480 <GPIO_PeriClockControl+0x11c>)
 80003fa:	4293      	cmp	r3, r2
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0xa8>
			GPIOA_PCLK_DI();
 80003fe:	4b21      	ldr	r3, [pc, #132]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000402:	4a20      	ldr	r2, [pc, #128]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000404:	f023 0301 	bic.w	r3, r3, #1
 8000408:	6313      	str	r3, [r2, #48]	; 0x30
 800040a:	e009      	b.n	8000420 <GPIO_PeriClockControl+0xbc>
		else if(pGPIOx == GPIOB)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a1e      	ldr	r2, [pc, #120]	; (8000488 <GPIO_PeriClockControl+0x124>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d105      	bne.n	8000420 <GPIO_PeriClockControl+0xbc>
			GPIOB_PCLK_DI();
 8000414:	4b1b      	ldr	r3, [pc, #108]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000416:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000418:	4a1a      	ldr	r2, [pc, #104]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800041a:	f023 0302 	bic.w	r3, r3, #2
 800041e:	6313      	str	r3, [r2, #48]	; 0x30
		if(pGPIOx == GPIOC)
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	4a1a      	ldr	r2, [pc, #104]	; (800048c <GPIO_PeriClockControl+0x128>)
 8000424:	4293      	cmp	r3, r2
 8000426:	d106      	bne.n	8000436 <GPIO_PeriClockControl+0xd2>
			GPIOC_PCLK_DI();
 8000428:	4b16      	ldr	r3, [pc, #88]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800042a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042c:	4a15      	ldr	r2, [pc, #84]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800042e:	f023 0304 	bic.w	r3, r3, #4
 8000432:	6313      	str	r3, [r2, #48]	; 0x30
 8000434:	e009      	b.n	800044a <GPIO_PeriClockControl+0xe6>
		else if(pGPIOx == GPIOD)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	4a15      	ldr	r2, [pc, #84]	; (8000490 <GPIO_PeriClockControl+0x12c>)
 800043a:	4293      	cmp	r3, r2
 800043c:	d105      	bne.n	800044a <GPIO_PeriClockControl+0xe6>
			GPIOD_PCLK_DI();
 800043e:	4b11      	ldr	r3, [pc, #68]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000442:	4a10      	ldr	r2, [pc, #64]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000444:	f023 0308 	bic.w	r3, r3, #8
 8000448:	6313      	str	r3, [r2, #48]	; 0x30
		if(pGPIOx == GPIOE)
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4a11      	ldr	r2, [pc, #68]	; (8000494 <GPIO_PeriClockControl+0x130>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d106      	bne.n	8000460 <GPIO_PeriClockControl+0xfc>
			GPIOE_PCLK_DI();
 8000452:	4b0c      	ldr	r3, [pc, #48]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000456:	4a0b      	ldr	r2, [pc, #44]	; (8000484 <GPIO_PeriClockControl+0x120>)
 8000458:	f023 0310 	bic.w	r3, r3, #16
 800045c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045e:	e009      	b.n	8000474 <GPIO_PeriClockControl+0x110>
		else if(pGPIOx == GPIOH)
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	4a0d      	ldr	r2, [pc, #52]	; (8000498 <GPIO_PeriClockControl+0x134>)
 8000464:	4293      	cmp	r3, r2
 8000466:	d105      	bne.n	8000474 <GPIO_PeriClockControl+0x110>
			GPIOH_PCLK_DI();
 8000468:	4b06      	ldr	r3, [pc, #24]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800046a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046c:	4a05      	ldr	r2, [pc, #20]	; (8000484 <GPIO_PeriClockControl+0x120>)
 800046e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000472:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000474:	bf00      	nop
 8000476:	370c      	adds	r7, #12
 8000478:	46bd      	mov	sp, r7
 800047a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047e:	4770      	bx	lr
 8000480:	40020000 	.word	0x40020000
 8000484:	40023800 	.word	0x40023800
 8000488:	40020400 	.word	0x40020400
 800048c:	40020800 	.word	0x40020800
 8000490:	40020c00 	.word	0x40020c00
 8000494:	40021000 	.word	0x40021000
 8000498:	40021c00 	.word	0x40021c00

0800049c <GPIO_Init>:


/*Init and De-init*/

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800049c:	b480      	push	{r7}
 800049e:	b087      	sub	sp, #28
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004a4:	2300      	movs	r3, #0
 80004a6:	617b      	str	r3, [r7, #20]

	/*GPIOx Pin Mode Reg config*/

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	795b      	ldrb	r3, [r3, #5]
 80004ac:	2b03      	cmp	r3, #3
 80004ae:	d81f      	bhi.n	80004f0 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	795b      	ldrb	r3, [r3, #5]
 80004b4:	461a      	mov	r2, r3
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	791b      	ldrb	r3, [r3, #4]
 80004ba:	005b      	lsls	r3, r3, #1
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	681a      	ldr	r2, [r3, #0]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	4619      	mov	r1, r3
 80004ce:	2303      	movs	r3, #3
 80004d0:	408b      	lsls	r3, r1
 80004d2:	43db      	mvns	r3, r3
 80004d4:	4619      	mov	r1, r3
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	400a      	ands	r2, r1
 80004dc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	6819      	ldr	r1, [r3, #0]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	697a      	ldr	r2, [r7, #20]
 80004ea:	430a      	orrs	r2, r1
 80004ec:	601a      	str	r2, [r3, #0]
 80004ee:	e0b7      	b.n	8000660 <GPIO_Init+0x1c4>
	}

	else
	{
		/*Configure the FT Select Reg*/
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b04      	cmp	r3, #4
 80004f6:	d117      	bne.n	8000528 <GPIO_Init+0x8c>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004f8:	4b40      	ldr	r3, [pc, #256]	; (80005fc <GPIO_Init+0x160>)
 80004fa:	68db      	ldr	r3, [r3, #12]
 80004fc:	687a      	ldr	r2, [r7, #4]
 80004fe:	7912      	ldrb	r2, [r2, #4]
 8000500:	4611      	mov	r1, r2
 8000502:	2201      	movs	r2, #1
 8000504:	408a      	lsls	r2, r1
 8000506:	4611      	mov	r1, r2
 8000508:	4a3c      	ldr	r2, [pc, #240]	; (80005fc <GPIO_Init+0x160>)
 800050a:	430b      	orrs	r3, r1
 800050c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050e:	4b3b      	ldr	r3, [pc, #236]	; (80005fc <GPIO_Init+0x160>)
 8000510:	689b      	ldr	r3, [r3, #8]
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7912      	ldrb	r2, [r2, #4]
 8000516:	4611      	mov	r1, r2
 8000518:	2201      	movs	r2, #1
 800051a:	408a      	lsls	r2, r1
 800051c:	43d2      	mvns	r2, r2
 800051e:	4611      	mov	r1, r2
 8000520:	4a36      	ldr	r2, [pc, #216]	; (80005fc <GPIO_Init+0x160>)
 8000522:	400b      	ands	r3, r1
 8000524:	6093      	str	r3, [r2, #8]
 8000526:	e035      	b.n	8000594 <GPIO_Init+0xf8>
		}

		/*Configure the RT Select Reg*/
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	795b      	ldrb	r3, [r3, #5]
 800052c:	2b05      	cmp	r3, #5
 800052e:	d117      	bne.n	8000560 <GPIO_Init+0xc4>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000530:	4b32      	ldr	r3, [pc, #200]	; (80005fc <GPIO_Init+0x160>)
 8000532:	689b      	ldr	r3, [r3, #8]
 8000534:	687a      	ldr	r2, [r7, #4]
 8000536:	7912      	ldrb	r2, [r2, #4]
 8000538:	4611      	mov	r1, r2
 800053a:	2201      	movs	r2, #1
 800053c:	408a      	lsls	r2, r1
 800053e:	4611      	mov	r1, r2
 8000540:	4a2e      	ldr	r2, [pc, #184]	; (80005fc <GPIO_Init+0x160>)
 8000542:	430b      	orrs	r3, r1
 8000544:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000546:	4b2d      	ldr	r3, [pc, #180]	; (80005fc <GPIO_Init+0x160>)
 8000548:	68db      	ldr	r3, [r3, #12]
 800054a:	687a      	ldr	r2, [r7, #4]
 800054c:	7912      	ldrb	r2, [r2, #4]
 800054e:	4611      	mov	r1, r2
 8000550:	2201      	movs	r2, #1
 8000552:	408a      	lsls	r2, r1
 8000554:	43d2      	mvns	r2, r2
 8000556:	4611      	mov	r1, r2
 8000558:	4a28      	ldr	r2, [pc, #160]	; (80005fc <GPIO_Init+0x160>)
 800055a:	400b      	ands	r3, r1
 800055c:	60d3      	str	r3, [r2, #12]
 800055e:	e019      	b.n	8000594 <GPIO_Init+0xf8>
		}

		/*Configure the RFT Select Reg*/
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	795b      	ldrb	r3, [r3, #5]
 8000564:	2b06      	cmp	r3, #6
 8000566:	d115      	bne.n	8000594 <GPIO_Init+0xf8>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000568:	4b24      	ldr	r3, [pc, #144]	; (80005fc <GPIO_Init+0x160>)
 800056a:	689b      	ldr	r3, [r3, #8]
 800056c:	687a      	ldr	r2, [r7, #4]
 800056e:	7912      	ldrb	r2, [r2, #4]
 8000570:	4611      	mov	r1, r2
 8000572:	2201      	movs	r2, #1
 8000574:	408a      	lsls	r2, r1
 8000576:	4611      	mov	r1, r2
 8000578:	4a20      	ldr	r2, [pc, #128]	; (80005fc <GPIO_Init+0x160>)
 800057a:	430b      	orrs	r3, r1
 800057c:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057e:	4b1f      	ldr	r3, [pc, #124]	; (80005fc <GPIO_Init+0x160>)
 8000580:	68db      	ldr	r3, [r3, #12]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	7912      	ldrb	r2, [r2, #4]
 8000586:	4611      	mov	r1, r2
 8000588:	2201      	movs	r2, #1
 800058a:	408a      	lsls	r2, r1
 800058c:	4611      	mov	r1, r2
 800058e:	4a1b      	ldr	r2, [pc, #108]	; (80005fc <GPIO_Init+0x160>)
 8000590:	430b      	orrs	r3, r1
 8000592:	60d3      	str	r3, [r2, #12]
		}

		/*Configure the GPIO port slection in SYSCFG_EXTICR Reg*/
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	791b      	ldrb	r3, [r3, #4]
 8000598:	089b      	lsrs	r3, r3, #2
 800059a:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	f003 0303 	and.w	r3, r3, #3
 80005a4:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASE_ADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	4a15      	ldr	r2, [pc, #84]	; (8000600 <GPIO_Init+0x164>)
 80005ac:	4293      	cmp	r3, r2
 80005ae:	d033      	beq.n	8000618 <GPIO_Init+0x17c>
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	4a13      	ldr	r2, [pc, #76]	; (8000604 <GPIO_Init+0x168>)
 80005b6:	4293      	cmp	r3, r2
 80005b8:	d01d      	beq.n	80005f6 <GPIO_Init+0x15a>
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	4a12      	ldr	r2, [pc, #72]	; (8000608 <GPIO_Init+0x16c>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d016      	beq.n	80005f2 <GPIO_Init+0x156>
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a10      	ldr	r2, [pc, #64]	; (800060c <GPIO_Init+0x170>)
 80005ca:	4293      	cmp	r3, r2
 80005cc:	d00f      	beq.n	80005ee <GPIO_Init+0x152>
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	4a0f      	ldr	r2, [pc, #60]	; (8000610 <GPIO_Init+0x174>)
 80005d4:	4293      	cmp	r3, r2
 80005d6:	d008      	beq.n	80005ea <GPIO_Init+0x14e>
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a0d      	ldr	r2, [pc, #52]	; (8000614 <GPIO_Init+0x178>)
 80005de:	4293      	cmp	r3, r2
 80005e0:	d101      	bne.n	80005e6 <GPIO_Init+0x14a>
 80005e2:	2307      	movs	r3, #7
 80005e4:	e019      	b.n	800061a <GPIO_Init+0x17e>
 80005e6:	2300      	movs	r3, #0
 80005e8:	e017      	b.n	800061a <GPIO_Init+0x17e>
 80005ea:	2304      	movs	r3, #4
 80005ec:	e015      	b.n	800061a <GPIO_Init+0x17e>
 80005ee:	2303      	movs	r3, #3
 80005f0:	e013      	b.n	800061a <GPIO_Init+0x17e>
 80005f2:	2302      	movs	r3, #2
 80005f4:	e011      	b.n	800061a <GPIO_Init+0x17e>
 80005f6:	2301      	movs	r3, #1
 80005f8:	e00f      	b.n	800061a <GPIO_Init+0x17e>
 80005fa:	bf00      	nop
 80005fc:	40013c00 	.word	0x40013c00
 8000600:	40020000 	.word	0x40020000
 8000604:	40020400 	.word	0x40020400
 8000608:	40020800 	.word	0x40020800
 800060c:	40020c00 	.word	0x40020c00
 8000610:	40021000 	.word	0x40021000
 8000614:	40021c00 	.word	0x40021c00
 8000618:	2300      	movs	r3, #0
 800061a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800061c:	4b5f      	ldr	r3, [pc, #380]	; (800079c <GPIO_Init+0x300>)
 800061e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000620:	4a5e      	ldr	r2, [pc, #376]	; (800079c <GPIO_Init+0x300>)
 8000622:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000626:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] |= portcode << (temp2 * 4);
 8000628:	4a5d      	ldr	r2, [pc, #372]	; (80007a0 <GPIO_Init+0x304>)
 800062a:	7cfb      	ldrb	r3, [r7, #19]
 800062c:	3302      	adds	r3, #2
 800062e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000632:	7c79      	ldrb	r1, [r7, #17]
 8000634:	7cbb      	ldrb	r3, [r7, #18]
 8000636:	009b      	lsls	r3, r3, #2
 8000638:	fa01 f303 	lsl.w	r3, r1, r3
 800063c:	4618      	mov	r0, r3
 800063e:	4958      	ldr	r1, [pc, #352]	; (80007a0 <GPIO_Init+0x304>)
 8000640:	7cfb      	ldrb	r3, [r7, #19]
 8000642:	4302      	orrs	r2, r0
 8000644:	3302      	adds	r3, #2
 8000646:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		/*Enable the the exti interrupt delivery using IMR Reg*/
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800064a:	4b56      	ldr	r3, [pc, #344]	; (80007a4 <GPIO_Init+0x308>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	687a      	ldr	r2, [r7, #4]
 8000650:	7912      	ldrb	r2, [r2, #4]
 8000652:	4611      	mov	r1, r2
 8000654:	2201      	movs	r2, #1
 8000656:	408a      	lsls	r2, r1
 8000658:	4611      	mov	r1, r2
 800065a:	4a52      	ldr	r2, [pc, #328]	; (80007a4 <GPIO_Init+0x308>)
 800065c:	430b      	orrs	r3, r1
 800065e:	6013      	str	r3, [r2, #0]
	}


	/*GPIOx Pin Speed Reg Config*/

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	79db      	ldrb	r3, [r3, #7]
 8000664:	461a      	mov	r2, r3
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	791b      	ldrb	r3, [r3, #4]
 800066a:	005b      	lsls	r3, r3, #1
 800066c:	fa02 f303 	lsl.w	r3, r2, r3
 8000670:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	689a      	ldr	r2, [r3, #8]
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	791b      	ldrb	r3, [r3, #4]
 800067c:	4619      	mov	r1, r3
 800067e:	2303      	movs	r3, #3
 8000680:	408b      	lsls	r3, r1
 8000682:	43db      	mvns	r3, r3
 8000684:	4619      	mov	r1, r3
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	400a      	ands	r2, r1
 800068c:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	6899      	ldr	r1, [r3, #8]
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	697a      	ldr	r2, [r7, #20]
 800069a:	430a      	orrs	r2, r1
 800069c:	609a      	str	r2, [r3, #8]
	temp = 0;
 800069e:	2300      	movs	r3, #0
 80006a0:	617b      	str	r3, [r7, #20]


	/*GPIOx Pull up Pull down Reg config*/
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	7a1b      	ldrb	r3, [r3, #8]
 80006a6:	461a      	mov	r2, r3
 80006a8:	687b      	ldr	r3, [r7, #4]
 80006aa:	791b      	ldrb	r3, [r3, #4]
 80006ac:	005b      	lsls	r3, r3, #1
 80006ae:	fa02 f303 	lsl.w	r3, r2, r3
 80006b2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	68da      	ldr	r2, [r3, #12]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	791b      	ldrb	r3, [r3, #4]
 80006be:	4619      	mov	r1, r3
 80006c0:	2303      	movs	r3, #3
 80006c2:	408b      	lsls	r3, r1
 80006c4:	43db      	mvns	r3, r3
 80006c6:	4619      	mov	r1, r3
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	400a      	ands	r2, r1
 80006ce:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	68d9      	ldr	r1, [r3, #12]
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	697a      	ldr	r2, [r7, #20]
 80006dc:	430a      	orrs	r2, r1
 80006de:	60da      	str	r2, [r3, #12]
	temp = 0;
 80006e0:	2300      	movs	r3, #0
 80006e2:	617b      	str	r3, [r7, #20]


	/*GPIOx Output Type Reg Config*/

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	799b      	ldrb	r3, [r3, #6]
 80006e8:	461a      	mov	r2, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	791b      	ldrb	r3, [r3, #4]
 80006ee:	fa02 f303 	lsl.w	r3, r2, r3
 80006f2:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	685a      	ldr	r2, [r3, #4]
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	791b      	ldrb	r3, [r3, #4]
 80006fe:	4619      	mov	r1, r3
 8000700:	2301      	movs	r3, #1
 8000702:	408b      	lsls	r3, r1
 8000704:	43db      	mvns	r3, r3
 8000706:	4619      	mov	r1, r3
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	400a      	ands	r2, r1
 800070e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	681b      	ldr	r3, [r3, #0]
 8000714:	6859      	ldr	r1, [r3, #4]
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	697a      	ldr	r2, [r7, #20]
 800071c:	430a      	orrs	r2, r1
 800071e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000720:	2300      	movs	r3, #0
 8000722:	617b      	str	r3, [r7, #20]


	/*GPIOx Altenate Function Reg Config*/
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	795b      	ldrb	r3, [r3, #5]
 8000728:	2b02      	cmp	r3, #2
 800072a:	d131      	bne.n	8000790 <GPIO_Init+0x2f4>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	791b      	ldrb	r3, [r3, #4]
 8000730:	08db      	lsrs	r3, r3, #3
 8000732:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	791b      	ldrb	r3, [r3, #4]
 8000738:	f003 0307 	and.w	r3, r3, #7
 800073c:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	7c3a      	ldrb	r2, [r7, #16]
 8000744:	3208      	adds	r2, #8
 8000746:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800074a:	7bfb      	ldrb	r3, [r7, #15]
 800074c:	009b      	lsls	r3, r3, #2
 800074e:	220f      	movs	r2, #15
 8000750:	fa02 f303 	lsl.w	r3, r2, r3
 8000754:	43db      	mvns	r3, r3
 8000756:	4618      	mov	r0, r3
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	7c3a      	ldrb	r2, [r7, #16]
 800075e:	4001      	ands	r1, r0
 8000760:	3208      	adds	r2, #8
 8000762:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	7c3a      	ldrb	r2, [r7, #16]
 800076c:	3208      	adds	r2, #8
 800076e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	7a5b      	ldrb	r3, [r3, #9]
 8000776:	461a      	mov	r2, r3
 8000778:	7bfb      	ldrb	r3, [r7, #15]
 800077a:	009b      	lsls	r3, r3, #2
 800077c:	fa02 f303 	lsl.w	r3, r2, r3
 8000780:	4618      	mov	r0, r3
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	681b      	ldr	r3, [r3, #0]
 8000786:	7c3a      	ldrb	r2, [r7, #16]
 8000788:	4301      	orrs	r1, r0
 800078a:	3208      	adds	r2, #8
 800078c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000790:	bf00      	nop
 8000792:	371c      	adds	r7, #28
 8000794:	46bd      	mov	sp, r7
 8000796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800079a:	4770      	bx	lr
 800079c:	40023800 	.word	0x40023800
 80007a0:	40013800 	.word	0x40013800
 80007a4:	40013c00 	.word	0x40013c00

080007a8 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80007a8:	b480      	push	{r7}
 80007aa:	b083      	sub	sp, #12
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	6078      	str	r0, [r7, #4]
 80007b0:	460b      	mov	r3, r1
 80007b2:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	695b      	ldr	r3, [r3, #20]
 80007b8:	78fa      	ldrb	r2, [r7, #3]
 80007ba:	2101      	movs	r1, #1
 80007bc:	fa01 f202 	lsl.w	r2, r1, r2
 80007c0:	405a      	eors	r2, r3
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	615a      	str	r2, [r3, #20]
}
 80007c6:	bf00      	nop
 80007c8:	370c      	adds	r7, #12
 80007ca:	46bd      	mov	sp, r7
 80007cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d0:	4770      	bx	lr
	...

080007d4 <GPIO_IRQ_InterruptConfig>:

/* Irq config and ISR handling */

void GPIO_IRQ_InterruptConfig(uint8_t IRQNumber, uint8_t EnOrDi)
{
 80007d4:	b480      	push	{r7}
 80007d6:	b083      	sub	sp, #12
 80007d8:	af00      	add	r7, sp, #0
 80007da:	4603      	mov	r3, r0
 80007dc:	460a      	mov	r2, r1
 80007de:	71fb      	strb	r3, [r7, #7]
 80007e0:	4613      	mov	r3, r2
 80007e2:	71bb      	strb	r3, [r7, #6]
	if(EnOrDi == ENABLE)
 80007e4:	79bb      	ldrb	r3, [r7, #6]
 80007e6:	2b01      	cmp	r3, #1
 80007e8:	d133      	bne.n	8000852 <GPIO_IRQ_InterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80007ea:	79fb      	ldrb	r3, [r7, #7]
 80007ec:	2b1f      	cmp	r3, #31
 80007ee:	d80a      	bhi.n	8000806 <GPIO_IRQ_InterruptConfig+0x32>
		{
			*NVIC_ISER0 |= (1 << IRQNumber);
 80007f0:	4b35      	ldr	r3, [pc, #212]	; (80008c8 <GPIO_IRQ_InterruptConfig+0xf4>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	79fa      	ldrb	r2, [r7, #7]
 80007f6:	2101      	movs	r1, #1
 80007f8:	fa01 f202 	lsl.w	r2, r1, r2
 80007fc:	4611      	mov	r1, r2
 80007fe:	4a32      	ldr	r2, [pc, #200]	; (80008c8 <GPIO_IRQ_InterruptConfig+0xf4>)
 8000800:	430b      	orrs	r3, r1
 8000802:	6013      	str	r3, [r2, #0]
		else if(IRQNumber >= 64 && IRQNumber < 96)
		{
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 8000804:	e059      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 8000806:	79fb      	ldrb	r3, [r7, #7]
 8000808:	2b1f      	cmp	r3, #31
 800080a:	d90f      	bls.n	800082c <GPIO_IRQ_InterruptConfig+0x58>
 800080c:	79fb      	ldrb	r3, [r7, #7]
 800080e:	2b3f      	cmp	r3, #63	; 0x3f
 8000810:	d80c      	bhi.n	800082c <GPIO_IRQ_InterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000812:	4b2e      	ldr	r3, [pc, #184]	; (80008cc <GPIO_IRQ_InterruptConfig+0xf8>)
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	79fa      	ldrb	r2, [r7, #7]
 8000818:	f002 021f 	and.w	r2, r2, #31
 800081c:	2101      	movs	r1, #1
 800081e:	fa01 f202 	lsl.w	r2, r1, r2
 8000822:	4611      	mov	r1, r2
 8000824:	4a29      	ldr	r2, [pc, #164]	; (80008cc <GPIO_IRQ_InterruptConfig+0xf8>)
 8000826:	430b      	orrs	r3, r1
 8000828:	6013      	str	r3, [r2, #0]
 800082a:	e046      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 800082c:	79fb      	ldrb	r3, [r7, #7]
 800082e:	2b3f      	cmp	r3, #63	; 0x3f
 8000830:	d943      	bls.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
 8000832:	79fb      	ldrb	r3, [r7, #7]
 8000834:	2b5f      	cmp	r3, #95	; 0x5f
 8000836:	d840      	bhi.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000838:	4b25      	ldr	r3, [pc, #148]	; (80008d0 <GPIO_IRQ_InterruptConfig+0xfc>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	79fa      	ldrb	r2, [r7, #7]
 800083e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000842:	2101      	movs	r1, #1
 8000844:	fa01 f202 	lsl.w	r2, r1, r2
 8000848:	4611      	mov	r1, r2
 800084a:	4a21      	ldr	r2, [pc, #132]	; (80008d0 <GPIO_IRQ_InterruptConfig+0xfc>)
 800084c:	430b      	orrs	r3, r1
 800084e:	6013      	str	r3, [r2, #0]
}
 8000850:	e033      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000852:	79fb      	ldrb	r3, [r7, #7]
 8000854:	2b1f      	cmp	r3, #31
 8000856:	d80a      	bhi.n	800086e <GPIO_IRQ_InterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000858:	4b1e      	ldr	r3, [pc, #120]	; (80008d4 <GPIO_IRQ_InterruptConfig+0x100>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	79fa      	ldrb	r2, [r7, #7]
 800085e:	2101      	movs	r1, #1
 8000860:	fa01 f202 	lsl.w	r2, r1, r2
 8000864:	4611      	mov	r1, r2
 8000866:	4a1b      	ldr	r2, [pc, #108]	; (80008d4 <GPIO_IRQ_InterruptConfig+0x100>)
 8000868:	430b      	orrs	r3, r1
 800086a:	6013      	str	r3, [r2, #0]
}
 800086c:	e025      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 800086e:	79fb      	ldrb	r3, [r7, #7]
 8000870:	2b1f      	cmp	r3, #31
 8000872:	d90f      	bls.n	8000894 <GPIO_IRQ_InterruptConfig+0xc0>
 8000874:	79fb      	ldrb	r3, [r7, #7]
 8000876:	2b3f      	cmp	r3, #63	; 0x3f
 8000878:	d80c      	bhi.n	8000894 <GPIO_IRQ_InterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800087a:	4b17      	ldr	r3, [pc, #92]	; (80008d8 <GPIO_IRQ_InterruptConfig+0x104>)
 800087c:	681b      	ldr	r3, [r3, #0]
 800087e:	79fa      	ldrb	r2, [r7, #7]
 8000880:	f002 021f 	and.w	r2, r2, #31
 8000884:	2101      	movs	r1, #1
 8000886:	fa01 f202 	lsl.w	r2, r1, r2
 800088a:	4611      	mov	r1, r2
 800088c:	4a12      	ldr	r2, [pc, #72]	; (80008d8 <GPIO_IRQ_InterruptConfig+0x104>)
 800088e:	430b      	orrs	r3, r1
 8000890:	6013      	str	r3, [r2, #0]
 8000892:	e012      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 8000894:	79fb      	ldrb	r3, [r7, #7]
 8000896:	2b3f      	cmp	r3, #63	; 0x3f
 8000898:	d90f      	bls.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
 800089a:	79fb      	ldrb	r3, [r7, #7]
 800089c:	2b5f      	cmp	r3, #95	; 0x5f
 800089e:	d80c      	bhi.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 80008a0:	4b0e      	ldr	r3, [pc, #56]	; (80008dc <GPIO_IRQ_InterruptConfig+0x108>)
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	79fa      	ldrb	r2, [r7, #7]
 80008a6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008aa:	2101      	movs	r1, #1
 80008ac:	fa01 f202 	lsl.w	r2, r1, r2
 80008b0:	4611      	mov	r1, r2
 80008b2:	4a0a      	ldr	r2, [pc, #40]	; (80008dc <GPIO_IRQ_InterruptConfig+0x108>)
 80008b4:	430b      	orrs	r3, r1
 80008b6:	6013      	str	r3, [r2, #0]
}
 80008b8:	e7ff      	b.n	80008ba <GPIO_IRQ_InterruptConfig+0xe6>
 80008ba:	bf00      	nop
 80008bc:	370c      	adds	r7, #12
 80008be:	46bd      	mov	sp, r7
 80008c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	e000e100 	.word	0xe000e100
 80008cc:	e000e104 	.word	0xe000e104
 80008d0:	e000e108 	.word	0xe000e108
 80008d4:	e000e180 	.word	0xe000e180
 80008d8:	e000e184 	.word	0xe000e184
 80008dc:	e000e188 	.word	0xe000e188

080008e0 <GPIO_IRQ_PriortyConfig>:

void GPIO_IRQ_PriortyConfig(uint8_t IRQNumber, uint32_t IRQPriorty)
{
 80008e0:	b480      	push	{r7}
 80008e2:	b085      	sub	sp, #20
 80008e4:	af00      	add	r7, sp, #0
 80008e6:	4603      	mov	r3, r0
 80008e8:	6039      	str	r1, [r7, #0]
 80008ea:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 80008ec:	79fb      	ldrb	r3, [r7, #7]
 80008ee:	089b      	lsrs	r3, r3, #2
 80008f0:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80008f2:	79fb      	ldrb	r3, [r7, #7]
 80008f4:	f003 0303 	and.w	r3, r3, #3
 80008f8:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80008fa:	7bbb      	ldrb	r3, [r7, #14]
 80008fc:	00db      	lsls	r3, r3, #3
 80008fe:	b2db      	uxtb	r3, r3
 8000900:	3304      	adds	r3, #4
 8000902:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriorty << (shift_amount));
 8000904:	7bfb      	ldrb	r3, [r7, #15]
 8000906:	009b      	lsls	r3, r3, #2
 8000908:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800090c:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000910:	6819      	ldr	r1, [r3, #0]
 8000912:	7b7b      	ldrb	r3, [r7, #13]
 8000914:	683a      	ldr	r2, [r7, #0]
 8000916:	409a      	lsls	r2, r3
 8000918:	7bfb      	ldrb	r3, [r7, #15]
 800091a:	009b      	lsls	r3, r3, #2
 800091c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000920:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000924:	430a      	orrs	r2, r1
 8000926:	601a      	str	r2, [r3, #0]
}
 8000928:	bf00      	nop
 800092a:	3714      	adds	r7, #20
 800092c:	46bd      	mov	sp, r7
 800092e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000932:	4770      	bx	lr

08000934 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000934:	b480      	push	{r7}
 8000936:	b083      	sub	sp, #12
 8000938:	af00      	add	r7, sp, #0
 800093a:	4603      	mov	r3, r0
 800093c:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR & (1 << PinNumber))
 800093e:	4b0c      	ldr	r3, [pc, #48]	; (8000970 <GPIO_IRQHandling+0x3c>)
 8000940:	695b      	ldr	r3, [r3, #20]
 8000942:	79fa      	ldrb	r2, [r7, #7]
 8000944:	2101      	movs	r1, #1
 8000946:	fa01 f202 	lsl.w	r2, r1, r2
 800094a:	4013      	ands	r3, r2
 800094c:	2b00      	cmp	r3, #0
 800094e:	d009      	beq.n	8000964 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1 << PinNumber);
 8000950:	4b07      	ldr	r3, [pc, #28]	; (8000970 <GPIO_IRQHandling+0x3c>)
 8000952:	695b      	ldr	r3, [r3, #20]
 8000954:	79fa      	ldrb	r2, [r7, #7]
 8000956:	2101      	movs	r1, #1
 8000958:	fa01 f202 	lsl.w	r2, r1, r2
 800095c:	4611      	mov	r1, r2
 800095e:	4a04      	ldr	r2, [pc, #16]	; (8000970 <GPIO_IRQHandling+0x3c>)
 8000960:	430b      	orrs	r3, r1
 8000962:	6153      	str	r3, [r2, #20]
	}
}
 8000964:	bf00      	nop
 8000966:	370c      	adds	r7, #12
 8000968:	46bd      	mov	sp, r7
 800096a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800096e:	4770      	bx	lr
 8000970:	40013c00 	.word	0x40013c00

08000974 <__libc_init_array>:
 8000974:	b570      	push	{r4, r5, r6, lr}
 8000976:	4d0d      	ldr	r5, [pc, #52]	; (80009ac <__libc_init_array+0x38>)
 8000978:	4c0d      	ldr	r4, [pc, #52]	; (80009b0 <__libc_init_array+0x3c>)
 800097a:	1b64      	subs	r4, r4, r5
 800097c:	10a4      	asrs	r4, r4, #2
 800097e:	2600      	movs	r6, #0
 8000980:	42a6      	cmp	r6, r4
 8000982:	d109      	bne.n	8000998 <__libc_init_array+0x24>
 8000984:	4d0b      	ldr	r5, [pc, #44]	; (80009b4 <__libc_init_array+0x40>)
 8000986:	4c0c      	ldr	r4, [pc, #48]	; (80009b8 <__libc_init_array+0x44>)
 8000988:	f000 f820 	bl	80009cc <_init>
 800098c:	1b64      	subs	r4, r4, r5
 800098e:	10a4      	asrs	r4, r4, #2
 8000990:	2600      	movs	r6, #0
 8000992:	42a6      	cmp	r6, r4
 8000994:	d105      	bne.n	80009a2 <__libc_init_array+0x2e>
 8000996:	bd70      	pop	{r4, r5, r6, pc}
 8000998:	f855 3b04 	ldr.w	r3, [r5], #4
 800099c:	4798      	blx	r3
 800099e:	3601      	adds	r6, #1
 80009a0:	e7ee      	b.n	8000980 <__libc_init_array+0xc>
 80009a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80009a6:	4798      	blx	r3
 80009a8:	3601      	adds	r6, #1
 80009aa:	e7f2      	b.n	8000992 <__libc_init_array+0x1e>
 80009ac:	080009e4 	.word	0x080009e4
 80009b0:	080009e4 	.word	0x080009e4
 80009b4:	080009e4 	.word	0x080009e4
 80009b8:	080009e8 	.word	0x080009e8

080009bc <memset>:
 80009bc:	4402      	add	r2, r0
 80009be:	4603      	mov	r3, r0
 80009c0:	4293      	cmp	r3, r2
 80009c2:	d100      	bne.n	80009c6 <memset+0xa>
 80009c4:	4770      	bx	lr
 80009c6:	f803 1b01 	strb.w	r1, [r3], #1
 80009ca:	e7f9      	b.n	80009c0 <memset+0x4>

080009cc <_init>:
 80009cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ce:	bf00      	nop
 80009d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009d2:	bc08      	pop	{r3}
 80009d4:	469e      	mov	lr, r3
 80009d6:	4770      	bx	lr

080009d8 <_fini>:
 80009d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009da:	bf00      	nop
 80009dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009de:	bc08      	pop	{r3}
 80009e0:	469e      	mov	lr, r3
 80009e2:	4770      	bx	lr
